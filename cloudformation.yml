AWSTemplateFormatVersion: 2010-09-09
Description: 'Amify: https://github.com/crucialwebstudio/amify'
Parameters:
  SSHLocation:
    Description: IP from which to allow SSH access (default = anywhere)
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid CIDR range of the form x.x.x.x/x.
Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/16
    Public:
      CIDR: 10.0.0.0/24
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !FindInMap
        - SubnetConfig
        - VPC
        - CIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: amify
        - Key: amify
          Value: amify
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap
        - SubnetConfig
        - Public
        - CIDR
      Tags:
        - Key: Name
          Value: amify-public
        - Key: amify
          Value: amify
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: amify
        - Key: amify
          Value: amify
  GatewayToInternet:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: amify
        - Key: amify
          Value: amify
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
  PublicSubnetNetworkAclAssociation:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet
      NetworkAclId: !GetAtt
        - VPC
        - DefaultNetworkAcl
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: amify
      GroupDescription: Allow SSH access
      SecurityGroupIngress:
        - CidrIp: !Ref SSHLocation
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
      Tags:
        - Key: Name
          Value: amify
        - Key: amify
          Value: amify
      VpcId: !Ref VPC
  IamInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: amify-instance
  IamInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref IamInstanceRole
      InstanceProfileName: amify-instance
  IamUserPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Grants permissions needed for amify user
      Path: /
      ManagedPolicyName: amify
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'iam:PassRole'
            Resource: !GetAtt
              - IamInstanceRole
              - Arn
          - Effect: Allow
            Action:
              - 'ec2:RunInstances'
              - 'ec2:CreateTags'
              - 'ec2:DescribeInstances'
              - 'ec2:CreateImage'
              - 'ec2:DescribeImages'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'ec2:TerminateInstances'
            Resource: '*'
            Condition:
              StringEquals:
                'ec2:ResourceTag/amify': amify
  IamUser:
    Type: 'AWS::IAM::User'
    Properties:
      ManagedPolicyArns:
        - !Ref IamUserPolicy
      Path: /
      UserName: amify
Outputs:
  PublicSubnet:
    Description: Public Subnet for amify
    Value: !Ref PublicSubnet
  IamInstanceRole:
    Description: IAM Instance Role for amify
    Value: !Ref IamInstanceRole
  IamInstanceProfile:
    Description: IAM Instance Profile for amify
    Value: !Ref IamInstanceProfile
  SecurityGroup:
    Description: EC2 Security Group for amify
    Value: !Ref SecurityGroup
  IamUser:
    Description: IAM User for amify
    Value: !Ref IamUser
  IamUserPolicy:
    Description: IAM User Policy for amify
    Value: !Ref IamUserPolicy
